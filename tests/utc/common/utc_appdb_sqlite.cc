/*
 * Copyright (c) 2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

#include <limits.h>

#include <string>
#include <iostream>

#include "common/app_db_sqlite.h"
#include "gtest/gtest.h"

namespace wrt {

namespace {
  const char* kLongValue =
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897";
  const char* kLongKey =
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897"
      "01234567891123456789212345678931234567894123456789512345678961234567897";
}  // namespace

// Tests AppDB class

TEST(AppDBSqliteTest, Positive) {
  SqliteDB db("/tmp/");
  db.Set("test", "key1", "value1");
  EXPECT_EQ(true, db.HasKey("test", "key1"));
  db.Remove("test", "key1");
  EXPECT_EQ(false, db.HasKey("test", "key1"));

  db.Set("test", "key1", "value1");
  EXPECT_EQ(std::string("value1"), db.Get("test", "key1"));

  db.Set("test", "key1", "value1-1");
  EXPECT_EQ(std::string("value1-1"), db.Get("test", "key1"));

  db.Set("test", "longvalue", kLongValue);
  EXPECT_EQ(std::string(kLongValue), db.Get("test", "longvalue"));

  db.Set("test", kLongKey, "longkey");
  EXPECT_EQ("longkey", db.Get("test", kLongKey));
}

}  // namespace wrt
